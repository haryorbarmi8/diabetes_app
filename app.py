# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zTsieQSlK3Kvst3kEkn7oTyJjwQVlAdx
"""

import streamlit as st
import pickle
import numpy as np

# Load trained model
with open("best_diabetes_rf_model.pkl", "rb") as file:
    model = pickle.load(file)

st.title("ðŸ©º Diabetes Prediction App")
st.write("Enter patient details to predict the likelihood of diabetes:")

# Collect inputs in the correct order
pregnancies = st.number_input("Pregnancies", min_value=0, max_value=20, value=0)
glucose = st.number_input("Glucose Level", min_value=0.0, max_value=300.0, value=120.0)
blood_pressure = st.number_input("Blood Pressure (mm Hg)", min_value=0.0, max_value=200.0, value=70.0)
skin_thickness = st.number_input("Skin Thickness (mm)", min_value=0.0, max_value=100.0, value=20.0)
insulin = st.number_input("Insulin Level (mu U/ml)", min_value=0.0, max_value=900.0, value=80.0)
bmi = st.number_input("BMI", min_value=0.0, max_value=70.0, value=25.0, format="%.1f")
dpf = st.number_input("Diabetes Pedigree Function", min_value=0.0, max_value=3.0, value=0.5, format="%.3f")
age = st.number_input("Age", min_value=0, max_value=120, value=30)

# Predict button
if st.button("Predict"):
    # Create input array in correct order
    input_data = np.array([[pregnancies, glucose, blood_pressure, skin_thickness, insulin, bmi, dpf, age]])

    # Make prediction
    prediction = model.predict(input_data)[0]
    probability = model.predict_proba(input_data)[0]

    # Display result
    st.subheader(f"Prediction: {'Diabetic' if prediction == 1 else 'Non-Diabetic'}")
    st.write("Class Probabilities:")
    for idx, prob in enumerate(probability):
        st.write(f"{model.classes_[idx]}: {prob:.4f}")